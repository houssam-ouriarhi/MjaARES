// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MjaARES.Api.DataService.Data;

#nullable disable

namespace MjaARES.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231230160146_Remove somme from table TrancheAge and add it to  SexeTrancheAgeEvenement ")]
    partial class RemovesommefromtableTrancheAgeandaddittoSexeTrancheAgeEvenement
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MjaARES.Api.Entities.DbSets.Categorie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MjaARES.Api.Entities.DbSets.Domaine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Domaines");
                });

            modelBuilder.Entity("MjaARES.Api.Entities.DbSets.DomaineEvenement", b =>
                {
                    b.Property<Guid>("DomaineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EvenementId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DomaineId", "EvenementId");

                    b.HasIndex("EvenementId");

                    b.ToTable("DomaineEvenements");
                });

            modelBuilder.Entity("MjaARES.Api.Entities.DbSets.Evenement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategorieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarques")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sujet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.ToTable("Evenements");
                });

            modelBuilder.Entity("MjaARES.Api.Entities.DbSets.EvenementOrganisateur", b =>
                {
                    b.Property<Guid>("EvenementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EvenementId", "OrganisateurId");

                    b.HasIndex("OrganisateurId");

                    b.ToTable("EvenementOrganisateurs");
                });

            modelBuilder.Entity("MjaARES.Api.Entities.DbSets.Organisateur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Organisateurs");
                });

            modelBuilder.Entity("MjaARES.Api.Entities.DbSets.Sexe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sexes");
                });

            modelBuilder.Entity("MjaARES.Api.Entities.DbSets.SexeTrancheAgeEvenement", b =>
                {
                    b.Property<Guid>("SexeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrancheAgeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EvenementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Somme")
                        .HasColumnType("int");

                    b.HasKey("SexeId", "TrancheAgeId", "EvenementId");

                    b.HasIndex("EvenementId");

                    b.HasIndex("TrancheAgeId");

                    b.ToTable("SexeTrancheAgeEvenements");
                });

            modelBuilder.Entity("MjaARES.Api.Entities.DbSets.TrancheAge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TrancheAges");
                });

            modelBuilder.Entity("MjaARES.Api.Entities.DbSets.DomaineEvenement", b =>
                {
                    b.HasOne("MjaARES.Api.Entities.DbSets.Domaine", "Domaine")
                        .WithMany("DomaineEvenements")
                        .HasForeignKey("DomaineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MjaARES.Api.Entities.DbSets.Evenement", "Evenement")
                        .WithMany("DomaineEvenements")
                        .HasForeignKey("EvenementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domaine");

                    b.Navigation("Evenement");
                });

            modelBuilder.Entity("MjaARES.Api.Entities.DbSets.Evenement", b =>
                {
                    b.HasOne("MjaARES.Api.Entities.DbSets.Categorie", "Categorie")
                        .WithMany("Evenements")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("MjaARES.Api.Entities.DbSets.EvenementOrganisateur", b =>
                {
                    b.HasOne("MjaARES.Api.Entities.DbSets.Evenement", "Evenement")
                        .WithMany("EvenementOrganisateurs")
                        .HasForeignKey("EvenementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MjaARES.Api.Entities.DbSets.Organisateur", "Organisateur")
                        .WithMany("EvenementOrganisateurs")
                        .HasForeignKey("OrganisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evenement");

                    b.Navigation("Organisateur");
                });

            modelBuilder.Entity("MjaARES.Api.Entities.DbSets.SexeTrancheAgeEvenement", b =>
                {
                    b.HasOne("MjaARES.Api.Entities.DbSets.Evenement", "Evenement")
                        .WithMany("SexeTrancheAgeEvenements")
                        .HasForeignKey("EvenementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MjaARES.Api.Entities.DbSets.Sexe", "Sexe")
                        .WithMany("SexeTrancheAgeEvenements")
                        .HasForeignKey("SexeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MjaARES.Api.Entities.DbSets.TrancheAge", "TrancheAge")
                        .WithMany("SexeTrancheAgeEvenements")
                        .HasForeignKey("TrancheAgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evenement");

                    b.Navigation("Sexe");

                    b.Navigation("TrancheAge");
                });

            modelBuilder.Entity("MjaARES.Api.Entities.DbSets.Categorie", b =>
                {
                    b.Navigation("Evenements");
                });

            modelBuilder.Entity("MjaARES.Api.Entities.DbSets.Domaine", b =>
                {
                    b.Navigation("DomaineEvenements");
                });

            modelBuilder.Entity("MjaARES.Api.Entities.DbSets.Evenement", b =>
                {
                    b.Navigation("DomaineEvenements");

                    b.Navigation("EvenementOrganisateurs");

                    b.Navigation("SexeTrancheAgeEvenements");
                });

            modelBuilder.Entity("MjaARES.Api.Entities.DbSets.Organisateur", b =>
                {
                    b.Navigation("EvenementOrganisateurs");
                });

            modelBuilder.Entity("MjaARES.Api.Entities.DbSets.Sexe", b =>
                {
                    b.Navigation("SexeTrancheAgeEvenements");
                });

            modelBuilder.Entity("MjaARES.Api.Entities.DbSets.TrancheAge", b =>
                {
                    b.Navigation("SexeTrancheAgeEvenements");
                });
#pragma warning restore 612, 618
        }
    }
}
